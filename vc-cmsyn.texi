\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename vc-cmsyn.info
@settitle CM Synergy mode
@c %**end of header
     
@ifinfo
Copyright @copyright{} 2015  Realworld OO Systems B.V.
@end ifinfo
@c @copying
@c Copyright 2015  Realworld OO Systems B.V.
@c Copyright 2003  Realworld Systems
 
@c Author: Sjoerd van Leent <sjoerd.van.leent@realworld-systems.com>
@c Author: Geert Ribbers
@c Created: May/2003
@c Updated: June/2015
 
@c This manual is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2, or (at your option)
@c any later version.
 
@c This manual is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
 
@c You should have received a copy of the GNU General Public License
@c along with GNU Emacs; see the manual COPYING.  If not, write to
@c the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
@c USA.
@c @end copying

@footnotestyle end

@macro ibmrs{}
IBM Rational Synergy
@end macro

@macro usemsgbox{}
@code{vc-rational-synergy-use-message-boxes}
@end macro

@dircategory GNU Emacs Lisp
@direntry
* @ibmrs{} Mode: (vc-rational-synergy). @ibmrs{} integration for Emacs
@end direntry

@titlepage
@title @ibmrs{} mode for Emacs
@author Geert Ribbers

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
@end titlepage
     
@node Top, Getting Started, (dir), (dir)
@ifnottex 
@top @ibmrs{} mode for Emacs
@end ifnottex

@ibmrs{} - Emacs integration
Files can be registered, checked in and out, history can be viewed, 
tasks can be selected.
Status-information is shown in the buffer's mode-line.
     
@menu
* Getting Started:: Getting Started
* Functionality::   Available Functionality
* Customization::   Customizing @ibmrs{} mode
* Concept Index::   Index of concepts
* Variable Index::  Index of variables
* CLI::             Command-Line Interface

@end menu
@c * Copying::         Your rights and freedoms.

Author: Sjoerd van Leent @uref{http://www.realworld-systems.com,Realworld Systems}
Author: Geert Ribbers, @uref{http://www.realworld-systems.com,Realworld Systems}
@c @insertcopying

@node Getting Started, Functionality, Top, Top
@chapter Getting Started
@cindex getting started installation install

@ibmrs{} is a (proprietary) versioning system, part of the
IBM Rational toolchain. It is a classic check-in/check-out style versioning
system, but uses this in conjunction with tasks set by administrative
and/or support personnel.

This integration is set up to work with version 7.2 of @ibmrs{}

@enumerate

@item
To be able to use this package, add the package's path to the load-path, or
install the module in a location which is pointed to by the load-path.

If the package needs to be added to the load-path, use the following syntax:

@example
(setq load-path (cons <package-directory> load-path))
@end example

@item 
Load the vc-rational-synergy integration module:
@example
(require 'vc-rational-synergy)
@end example

@item
Put the next line in the custom-set-variables section of your initialisation file (probably .emacs):
@example
 '(vc-cmsyn-auto-check-status-file-open-p t)
@end example

@item 
The CMSynergy menu is found in the menu-bar under Tools by default:
 @ibmrs{}@*
This can be customized by changing the value of custom-var @code{vc-rational-synergy-menu-path} with the Emacs customization system.

@item 
You may want to customize the mode:
Go to the menu-bar @ibmrs{}/Customize...
This brings up a customization buffer where you can adjust options to your personal preference.

@end enumerate
@xref{Customization}.

@node Functionality, Customization, Getting Started, Top
@chapter Functionality

Functionality of @ibmrs{} is divided into several features. Authentication provides the means to be able to authenticate against an @ibmrs{} server, such that it is possible to interact with the necessary tooling. Further, there is the ability to perform task management, a rather isolate feature of this particular version control system. Then there is the ability for modification of files and directories. The last feature is to be able to perform difference analysis.

A significant change between the original Telelogic Change Synergy command infrastructure and the new architecture interfacing is that the commands are now implemented using the format options of the Command-Line interface (@pxref{CLI}), and the transcript is not used anymore for data capture.

@menu
* Authentication:: Authentication
* Task Management:: Task Management
* Buffer operations:: Buffer operations
* File operations:: File operations
* Directory operations:: Directory operations
* Modeline:: The modeline
* Show Properties:: Shows the properties of the file visited by the current buffer
* History:: Acts on the history of objects
@end menu

@node Authentication, Task Management, , Functionality
@chapter Authentication
@cindex authentication functionality

Through authentication, it is possible to be able to communicate with the @ibmrs{} server.

@menu
* Login...:: Logging in
* Logout...:: Logging out
* Current User:: Display information for the current user
* Status:: Display generic status information
@end menu

@node Login..., Logout..., , Authentication
@chapter Login...
@cindex authentication functionality

(Menu > @ibmrs{} > Login...)@*
(M-x vc-rational-synergy-login RET)

An @ibmrs{} session will be started. During the startup, an authentication
process will be processed, where information is gathered from the minibuffer.

Normally, the values will be gathered from the surrounding settings
when possible, especially, the user name will be gathered from the system
environment. It is possible to preset these values either by using their
appropriate environment values, otherwise by setting them through customization
values.

The login procedure will be automatically launched if an @ibmrs{} request
is made, unless the customization value
@code{vc-rational-synergy-authentication-explicit} is set.

The login process uses the minibuffer for requesting authentication details.
Of logging on is successful, this will be shown to the user explicitly,
if it failed, it will also be shown.

@anchor{CCM_ADDR}
@defvr {Environment Variable} CCM_ADDR
After a valid login, the system enviroment variable @code{CCM_ADDR} is used
for storing the information. Internally, @ibmrs{} uses this value to
recognize the appropriate session. By checking the status (@pxref{Status}),
it is possible to see if an authentication process has been proceeded
properly.
@end defvr

The environment variables which can be set are:

@anchor{CCM_USERNAME}
@defvr {Environment Variable} CCM_USERNAME
Overrides the user name, otherwise `user-login-name' is used. @ref{Username}.
@end defvr

@anchor{CCM_DATABASE}
@defvr {Environment Variable} CCM_DATABASE
Sets the database location. @ref{Database}.
@end defvr

@anchor{CCM_HOST}
@defvr {Environment Variable} CCM_HOST
Sets the host location. @ref{Host}.
@end defvr

@section Username
@anchor{Username}

During the process of authentication, the user name will be requested in
the Emacs minibuffer (Echo area). If available, it
will suggest the default setting, which is derived from the
@code {vc-rational-synergy-authentication-username} customization setting. If
the customization setting is empty, it will attempt to use the user name
setting from the @ref{CCM_USERNAME} environment variable. If that is unavailable
it will use the currently logged in user name.

By entering another valid user name, this name will be used while authenticating.

@section Password
@anchor{Password}

During the process of authentication, the password will be requested in
the Emacs minibuffer (Echo area). Although all the other authentication 
settings can be configured, due to security reasons, the password must be
supplied directly by the user.

@section Database
@anchor{Database}

During the process of authentication, the database will be requested in
the Emacs minibuffer (Echo area). If available, it will
suggest the default setting, which is derived from the
@code{vc-rational-synergy-authentication-settings} customization setting. If
the customization setting is empty, it will attempt to use the database setting
from the @ref{CCM_DATABASE} environment variable. If that is not present either,
it is mandatory to enter a valid database name.

By entering another valid database name, this name will be used while authenticating
as location of the database.

@section Host
@anchor{Host}

During the process of authentication, the host name will be requested in
the Emacs minibuffer (Echo area). If available, it will
suggest the default setting, which is derived from the
@code{vc-rational-synergy-authentication-settings} customization setting. If
the customization setting is empty, it wil attempt to use the host setting
from the @ref{CCM_HOST} environment variable. Further, if these are not set,
it will attempt to derive a valid setting from the @ref{Database}.

By entering another valid host name, this name will be used while authenticating
as location of the @ibmrs{} server.

@node Logout..., Current User, Login..., Authentication
@chapter Login...
@cindex authentication functionality

(Menu > @ibmrs{} > Logout...)@*
(M-x vc-rational-synergy-logout RET)


Logging out explicitly disconnects the current session.



@node Current User, Status, Logout..., Authentication
@chapter Current User
@cindex authentication functionality

(Menu > @ibmrs{} > Current User)@*
(M-x vc-rational-synergy-logged-on-user RET)

Shows the user name of the user currently logged on in the Echo Area, if
a user has been logged in. This is actually the first portion of the
status (@pxref{Status}).



@node Status, , Current User, Authentication
@chapter Status
@cindex authentication functionality

(Menu > @ibmrs{} > Status)@*
(M-x vc-rational-synergy-status RET)

Shows the user name, database and address of the user currently logged 
on in the Echo Area, if a user has been logged in.



@node Task Management, Authentication, Buffer operations, Functionality
@chapter Task Management
@cindex task functionality

Task management is performed by the user to be able to switch between several
assigned tasks within the context of a particular work area. Typically,
to be able to work on a particular file, it is necessary to set a task
as default task, on which further actions are performed.

@menu
* Show Default Task:: Shows the default task being currently selected
* Show Task Files:: Shows which files are part of the task, and which status they have
* Open Task Files:: Opens all task files which are in working mode
* Select Task:: Selects a particular task and set it as Default Task
* Check In Task:: Checks all files and other objects in, and checks in the task (irreversibly)
@end menu

@section Show Default Task
@anchor{Show Default Task}
@cindex default task

(Menu > @ibmrs{} > Show Default Task)@*
(C-c RET d)

Displays the default task, if set, through a message, either in the minibuffer,
or if the customization variable @usemsgbox{} has been set, through a message box.

If the currently selected file is not part of any work area, this function will
not be able to result into a sensible output.

@section Show Task Files
@anchor{Show Task Files}
@cindex task files

(Menu > @ibmrs{} > Show Task Files)@*
(M-x vc-rational-synergy-show-task-files RET)

This will popup the @ibmrs{} Output buffer and show a list of files which are involved 
in the selected default task. It will show the following information for each
individual object:

  The object's name, the object's type, the object's version and instance
  and the current object's status. If the status is ``working'', it will also
  show the actual location of the object in the work area.

Also, the work area itself is displayed in the top of the buffer, so that
it becomes easier to navigate to the proper objects available.

@section Open Task Files
@anchor{Open Task Files}
@cindex task files

(Menu > @ibmrs{} > Open Task Files)@*
(M-x vc-rational-synergy-open-task-files RET)

This will open all the files belonging to the default task in emacs,
unless they are opened already. It uses the same paradigm as `Show Task Files',
so the files opened are the same ``working'' objects.

@section Select Task
@anchor{Select Task}
@cindex select task

(Menu > @ibmrs{} > Select Task)@*
(C-c RET s)

Shows the minibuffer and requests a task to be selected. The task is to
be selected using it's identifier, and if in need, can be interrogated
using the M-h combination. Completion can be accomplished using the TAB key.

@section Check In Task
@anchor {Check In Task}
@cindex checkin

(Menu > @ibmrs{} > Check In Task)@*
(C-c RET t)

Attempts to check in a task, by checking in all non-checked in objects
belonging to the task, further checks in the task. Before commencing
actual check in, checks if all buffers associated to a particular
task's file, are in a non-modified state, and requests a comment before
continuing check in.

If the customization variable @code{vc-rational-synergy-disallow-empty-comment}
is set, a comment must be given, otherwise, the operation will be aborted.

@node Buffer operations, File operations, Task Management, Functionality
@chapter Buffer operartions
@cindex buffer project

Currently, only one buffer operation is available: Show project. This
shows the current project of the given work area. It can be invoked through

(Menu > @ibmrs{} > Buffer > Show project)@*
(M-x vc-rational-synergy-current-project RET)



@node File operations, Directory operations, Buffer operations, Functionality
@chapter File
@cindex file

There are several file operations available, such as checking in files,
checking out files and registering files.

@menu
* File Checkout:: Checks out a file
* File Undo Checkout:: Undoes the checking out of a file
* File Check In:: Checks a (modified) file in
* File Register:: Registers a file (adds a file) to the task
@end menu


@section Checkout
@anchor{File Checkout}
@cindex checkout file

(Menu > @ibmrs{} > File > Checkout)@*
(C-c RET o)

This item is only able to complete, when a file is visited using
a buffer within a particular workarea, and a default task is selected.

Checks out the current file from @ibmrs{} into ``working'' state.

@section Undo Checkout
@anchor{File Undo Checkout}
@cindex undo checkout file

(Menu > @ibmrs{} > File > Undo Checkout)@*
(C-c RET u)

Brings the file back into the state before checkout, 
deleting the checked out version from @ibmrs{}.

@strong{Caution:} This means that
all modifications currently made, are discarded.

This operations allways requests the user to proceed, even if
the buffer is in a saved state, as data can be permanently lost.

@section Check In
@anchor {File Check In}
@cindex checkin file

(Menu > @ibmrs{} > File > Check In)@*
(C-c RET i) 

This item is only able to complete, when a file is visited using
a buffer within a particular workarea, and a default task is selected.

If the buffer is in a saved state, this operation will ask the user
whether or not the buffer should be saved. If it is not so, the
operation will be aborted.

Before checking in, asks the user to enter a comment. If the customization
variable @code{vc-rational-synergy-disallow-empty-comment}
is set, a comment must be given, otherwise, the operation will be aborted.

If all above prerequisites are met, the file is checked in and the
buffer is updated to reflect these changes.

@section Register
@anchor{File Register}
@cindex register file

(Menu > @ibmrs{} > File > Register)@*
(C-c RET r)

This item is only able to complete, when a file is visited using
a buffer within a particular workarea, and a default task is selected.

Further, the buffer is to be in a saved state and the file visited
by the buffer should not be registered.

It will register the file into @ibmrs{} and, when the customization
variables `c-rational-synergy-query-create-file-type' and/or
`vc-rational-synergy-query-create-file-version' are set,
respectively asks for a file type and/or file version. If, using the
minibuffer, no values are given, normal operation is assumed and
@ibmrs{} itself will set the proper attributes.



@node Directory operations, Modeline, File operations, Functionality
@chapter Directory
@cindex directory

There are several directory operations available, such as checking in
a directory, checking out a directory and registering directories.

@menu
* Directory Checkout:: Checks out a directory
* Directory Undo Checkout:: Undoes the checking out of a directory
* Directory Check In:: Checks a (modified) directory in
* Directory Register:: Registers a directory to the task
@end menu

@section Checkout
@anchor{Directory Checkout}
@cindex checkout directory

(Menu > @ibmrs{} > Directory > Checkout)@*
(M-x vc-rational-synergy-co-directory)

This item is only able to complete, when a directory is visited using
a buffer within a particular workarea, or a valid directory is
visited using a dired buffer. In both cases, a default task is
required.

Also, if any buffer is open in a modified state and the buffer
is visiting a non-working file within the directory, it needs to
be saved or reverted prior to performing the directory checkout.

Checks out the current directory and it's files from @ibmrs{} 
into ``working'' state.

@section Undo Checkout
@anchor{Directory Undo Checkout}
@cindex checkout directory

(Menu > @ibmrs{} > Directory > Undo Checkout)@*
(M-x vc-rational-synergy-undo-co-directory)

This item is only able to complete, when a directory is visited using
a buffer within a particular workarea, or a valid directory is
visited using a dired buffer. In both cases, a default task is
required.

Also, if any buffer is open in a modified state and the buffer
is visiting a working file within the directory, it needs to
be saved or reverted prior to performing the undo checkout.

@strong{Caution:} this operation reverts all data in the files, this means
that altered data in files being reverted is irreversibly removed.

Undoes the checkout of the current directory and it's files from @ibmrs{} 
back into ``integrate'' state.

This operation will allways ask the user for confirmation, as data
can be permanently lost.

@section Check In
@anchor {Directory Check In}
@cindex checkin directory

(Menu > @ibmrs{} > Directory > Check In)@*
(M-x vc-rational-synergy-ci-directory) 

This item is only able to complete, when a file is visited using
a buffer within a particular workarea or when a directory is visited
using a dired buffer. Also, a default task must be selected.

If any of the buffers is visiting a file which is part of the directory,
and the buffer is in modified state, the operation will be aborted, as
these buffers first need their data to be saved or reverted.

Before checking in, asks the user to enter a comment. If the customization
variable @code{vc-rational-synergy-disallow-empty-comment}
is set, a comment must be given, otherwise, the operation will be aborted.

If all above prerequisites are met, the directory and files thereof are 
checked in and the associated buffers are updated to reflect these changes.

@section Register
@anchor{Directory Register}
@cindex register directory

(Menu > @ibmrs{} > Directory > Register)@*
(M-x vc-rational-synergy-register-directory)

This item is only able to complete, when a file is visited using
a buffer within a particular workarea or when a directory is visited
using a dired buffer. Also, a default task must be selected.

This operation is both able to recursively as well as non-recursively
register a directory. Recursively means that it attempts to register
all directories, their sub-directories and so on including their files.

The operation will only register files which do not match the files set
by the customization variable @code{vc-rational-synergy-skip-criteria}

It will register the file into @ibmrs{} and, when the customization
variable `vc-rational-synergy-query-create-file-version' is set,
ask for a file version. If, using the minibuffer, no value is given, 
normal operation is assumed and @ibmrs{} itself will set the proper attributes.

A result of registered files and non-registered are shown in the @ibmrs{}
buffer, such that is is visible to see which files and directories have been
properly registered.



@node Modeline, Show Properties, Directory operations, Functionality
@chapter Modeline
@cindex modeline

(Menu > @ibmrs{} > Update Modeline)@*
(M-x vc-rational-synergy-update-modeline RET)

It is possible to update the modeline of a buffer. This is especially necessary
if direct operations are performed using the CCM command from within a shell in
Emacs.

The modeline will be updated by appending a suffix to the buffer's name, if the
buffer is visiting a file within a work area. It will show the status of the
file and the version of the file.



@node Show Properties, History, Modeline, Functionality
@chapter Show Properties
@cindex properties

(Menu > @ibmrs{} > Show Properties)@*
(C-c RET p)

If the buffer is visiting a file inside a work area, and the file is registered
in @ibmrs{}, shows the properties of that file inside the @ibmrs{} buffer.



@node History, , Show Properties, Functionality
@chapter History
@cindex history


@enumerate

@item Show History
@anchor{Show History}@*
@itemize @bullet
@item This File (graphics) (C-c RET h)
@anchor{This File (graphics)}@*
Shows the history of the current file graphically within the @ibmrs{} GUI.

@item This File (details)
@anchor{This File (details)}@*
Shows the history of the current file detailed within the @ibmrs{} Output buffer.@*
Sample Output:@*
@quotation
Retrieving history...@*
@*
Object:  collection_transfer.magik~1 (majik:1)@*
Owner:   ccm_root@*
State:   released@*
Created: maandag 24 maart 2003 15:17:13@*
Task:    10@*
Comment:@*
@*
Predecessors:@*
Successors:@*
	collection_transfer.magik~2:majik:1@*
	collection_transfer.magik~1.1.1:majik:1@*
	collection_transfer.magik~1.2.1:majik:1@*
*****************************************************************************@*
Object:  collection_transfer.magik~2 (majik:1)@*
Owner:   geert@*
State:   integrate@*
Created: dinsdag 15 april 2003 12:03:13@*
Task:    19@*
Comment:@*
checkin from within @ibmrs{}@*
Predecessors:@*
	collection_transfer.magik~1:majik:1@*
Successors:@*
	collection_transfer.magik~3:majik:1@*
*****************************************************************************@*
@*
@ibmrs{} Command finished@*
@end quotation

@item This Directory (graphics)
@anchor{This Directory (graphics)}@*
Shows the history of the current directory graphically within the @ibmrs{} GUI.

@item This Directory (details)
@anchor{This Directory (details)}@*
Shows the history of the current directory detailed within the @ibmrs{} Output buffer.
@end itemize

@item Compare
@anchor{Compare}@*
@itemize @bullet
@item With Previous Version
@anchor{With Previous Version}@*
Shows the differences between the current file and it's predecessor with ediff.

@item With other Version
@anchor{With other Version}@*
Shows the differences between the current file and a prompted version with ediff.

@item Versions
@anchor{Versions}@*
Shows the differences of prompted versions of the current file with ediff.
@end itemize

@item Customize...
@anchor{Customize...} @*
Brings up the Custmization Buffer for the User Options for @ibmrs{} mode.@*
@xref{User Options}.

@item Help
@anchor{Help}@*
@itemize @bullet
@item Info...
@anchor{Info...}@*
Brings up the Info-help for @ibmrs{} mode.

@item Html...
@anchor{Html...}@*
Brings up the HTML-help for @ibmrs{} mode in the default browser.
@end itemize

@item About CMSynergy Mode...
@anchor{About CMSynergy Mode...} @*
Prints version- and author information in the minibuffer.
@end enumerate

@c @node   Keyboard, Customization, Functionality, Top
@c @chapter Keyboard

@c Several functions are available through keys on the keyboard:
@c @itemize
@c @item
@c @code{C-c RET l} Login

@c @item
@c @code{C-c RET d} Show Default Task

@c @item
@c @code{C-c RET s} Select Task

@c @item
@c @code{C-c RET o} Check Out This File


@node  Customization, User Options, Functionality, Top
@chapter Customization
@cindex customize customization preferences options

This chapter describes how to customize @ibmrs{} mode to suit your wishes and needs.
Emacs customization variables are used.
These are divided in several groups of custom-variables govering the mode:
@code{vc-rational-synergy (User Options)},
@code{vc-rational-synergy-tooling (Tool Options)},
@code{vc-rational-synergy-admin (Admin Options)} and
@code{vc-rational-synergy-authentication (Authentication Options)} 

The base group deals with personal preferences, the administrative options
with how the mode works and the last group with authentication settings.

@menu
* User Options::           User Options
* Tool Options::           Tool Options
* Admin Options::          Administration Options
* Authentication Options:: Authentication Options
@end menu

The options should *not* be set with setq but by using the customisation system of emacs.
Call up customization buffers by using M-x customize-variable / customize-group and use the 
set- and save- buttons.
You may also want to take a look in the Options menu under Customize Emacs.
Alternatively edit the custom-set-variables section of your personal init file by hand and set
the options there.

@node  User Options, Tool Options, , Customization
@chapter User Options
@c @cindex 

The user options are available from the Menubar and deal with purely personal preferences.
Every user may work with his / her own settings.

The options are:@*
@vtable @samp

@item vc-rational-synergy-menu-path
@strong{Sets a different menu path}
Indicates the place of the @ibmrs{} menu in the menu-bar (no elements -so nil- is at top).

@item vc-rational-synergy-use-message-boxes
@strong{Whether to use message boxes}
Indicates that operations which conclude with a message, show the message in a
message box, instead of using the Echo Area (minibuffer) for conveying information.

This option is especially practical for those who are not accustomed to how
the Emacs @ibmrs{} interface works.

@item vc-rational-synergy-disallow-empty-comment
@strong{Disallow comments which are empty}

When activated, and as such set to a non-nil value, this option disallows users
from attempting a check in opereration without giving a valid comment.

@item vc-rational-synergy-skip-criteria
@strong{Skip files from directory registration}

When a directory is being registered, the extensions mentioned here will be
used to match against files being registered during directory registration.

If a file (or directory) matches a criterion, the file (or directory) will
not be registered. A typical a criterion is an artifact from a compilation
of a unit.

The criteria are defined as wildcard criteria.

@item vc-rational-synergy-version-object-separator
@strong{Project Version Object Separator}

The @ibmrs{} object-version separator.@*
This is configured in @ibmrs{}, separates object-name and version in 4-part-names,
typically, this is a tilde (~).

@end vtable


@node Tool Options, Admin Options, User Options, Customization
@chapter User Options
@c @cindex 

The user options are available from the Menubar and deal with purely personal preferences.
Every user may work with his / her own settings.

The options are:@*
@vtable @samp

@item vc-rational-synergy-binary-name
@strong{@ibmrs{} binary (executable) name}

The @ibmrs{} executable name, typically, this will be @emph{ccm}.

@item vc-rational-synergy-startup-path
@strong{@ibmrs{} startup path}

If the binary can not be found in the system's PATH, it needs to
be set explicitely where it can be found.

@end vtable

@node  Admin Options, Authentication Options, Tool Options, Customization
@chapter Admin Options
@c @cindex 

You can put up a customization-buffer by means of: @*
M-x customize-group RET vc-cmsyn-admin RET.@*
Here the options are listed and you can manage te values here.
They deal with a correct working of @ibmrs{} mode and should be set by the system administrator.
Whenever @ibmrs{} is configured differently or when output strings from @ibmrs{} change (new versions e.g.), 
changes in these settings may be necessary.

The options are:@*
@vtable @samp

@item vc-rational-synergy-query-create-file-type
@strong{Query File-type?}
Boolean indicating if type of file has to be queried before registering a file in ccm
Typically this will be organized within @ibmrs{} already so it goes automatically.

@item vc-rational-synergy-query-create-file-version
@strong{Query File-version?}
Boolean indicating if version of file has to be queried before registering a file in ccm.
Typically this will be organized within @ibmrs{} already so it goes automatically.

@item vc-rational-synergy-auto-check-status-file-open-p
@strong{Auto check status on file open?}
Indicates if @ibmrs{} status should be checked for on opening of files.
This will have to be switched on, otherwise file-status is not retrieved from @ibmrs{} when files are opened.

@item vc-rational-synergy-buffer-name
@strong{The @ibmrs{} buffer name}
Name of buffer in which to log @ibmrs{} actions.

@end vtable

@node Authentication Options, , Admin Options, Customization
@chapter Admin Options
@c @cindex 

@vtable @samp

@item vc-rational-synergy-authentication-explicit
@strong{Should explicitely authenticate}

When a file is visited by a buffer inside a work area, or operation is
started using @ibmrs{}, it automatically starts the authentication procedure.

If it is wanted to perform this action by hand, and disallow automatic
authentication, this value should be set to a non-nil value.

@item vc-rational-synergy-authentication-license-friendly
@strong{Should be nice to licenses}

Normally, after authentication, a address is taken automatically and
only returned after logout, also returning the license. If licenses
are scarce, it could be decided to perform actions such that it will
authenticate and take a license for the period of the action itself.

@strong{Caution:} this is extremely slow

@item vc-rational-synergy-authentication-settings
@strong{Database and host settings}

It is necessary to have a database defined. The host can be derived
from the database name if the normal port is used. The database and
host can also be determined through @code{CCM_DATABASE} and 
@code{CCM_HOST}. Setting these values will override those.
@ref{CCM_DATABASE} and @ref{CCM_HOST}

@item vc-rational-synergy-authentication-username
@strong{Database and host settings}

If a username is derived but is not the username wanted, it can
be overriden using this customization variable. @ref{CCM_USERNAME}

@end vtable




@node CLI, Concept Index, , Top
@chapter CLI
@cindex cli command-line


@node Concept Index, Variable Index, CLI, Top
@appendix Concept Index
@printindex cp

@node Variable Index,  , Concept Index, Top
@appendix Variable Index
@printindex vr

@c @shortcontents
@c @contents

@bye
